<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .sort-icon {
            cursor: pointer;
            margin-left: 5px;
        }
    </style>
</head>
<body class="bg-light">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto"> 
                <li class="nav-item active ">
                    <a class="btn btn-primary btn-md mr-2" href="/adminHome" role="button">Home</a>
                </li>
            </ul>
        </div>
    </nav>
    
    <div class="container mt-4">
        <h1 class="text-center text-primary">Employee List</h1>
        <div class="row justify-content-between mt-3">
            <div class="col">
                <a href="/addemploye" class="btn btn-primary">Add Employee</a>
            </div>
        </div>
        <div class="btn-">
            <div class="col d-flex justify-content-end">
                <a href="/mastercourselist" class="btn btn-primary ml-auto">Master Course</a>
            </div>
        </div>
        
        
        
        <form class="mt-3">
            <div class="input-group">
                <input type="text" name="search" id="search" class="form-control" placeholder="Enter the name of Employee to be Searched">
            </div>
        </form>
        
        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th onclick="sortTable('uniqueID')">Unique ID <span id="sortIconId" class="sort-icon">ðŸ”½</span></th>
                    <th>Image</th>
                    <th onclick="sortTable('name')">Name <span id="sortIconName" class="sort-icon">ðŸ”½</span></th>
                    <th onclick="sortTable('email')">Email <span id="sortIconEmail" class="sort-icon">ðŸ”½</span></th>
                    <th>Mobile</th>
                    <th>Designation</th>
                    <th>Gender</th>
                    <th>Course</th>
                    <th onclick="sortTable('createdAt')">Create Date <span id="sortIconDate" class="sort-icon">ðŸ”½</span></th>
                    <th>Edit</th>
                    <th>Delete</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <% employedata.forEach(employee => { %>
                <tr>
                    <td><%= employee.uniqueID %></td>
                    <td><img src="/<%= employee.imgUpload.replace('\\', '/') %>" alt="Employee Image" width="50" height="50"></td>
                    <td><%= employee.name %></td>
                    <td><%= employee.email %></td>
                    <td><%= employee.mobile %></td>
                    <td><%= employee.designation %></td>
                    <td><%= employee.gender %></td>
                    <td><%= employee.course %></td>
                    <td><%= new Date(employee.createdAt).toLocaleDateString() %></td>
                    <td><a href="/editEmployee/<%= employee._id %>" class="btn btn-warning">Edit</a></td>
                    <td><button class="btn btn-danger" onclick="deleteEmployee('<%= employee._id %>')">Delete</button></td>
                    <td>
                        <button class="btn btn-primary" onclick="updateStatus('<%= employee._id %>')">
                            <%= employee.status ? 'Active' : 'Inactive' %>
                        </button>
                    </td>                
                </tr>
                <% }) %>
            </tbody>
        </table>
        <div class="pagination-area mt-15 mb-50">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-start">
                    <% if (page > 1) { %>
                        <li class="page-item">
                            <a class="page-link" href="/employelist?page=<%= page - 1 %>">Prev</a>
                        </li>
                    <% } %>
                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= page === i ? 'active' : '' %>">
                            <a class="page-link" href="/employelist?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
                    <% if (page < totalPages) { %>
                        <li class="page-item">
                            <a class="page-link btn btn-primary" href="/employelist?page=<%= page + 1 %>">Next</a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>
        
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let debounceTimer;
        let sortOrder = {
            uniqueID: false,
            name: false,
            email: false,
            createdAt: false
        }; // Track sorting order for each column

        document.getElementById('search').addEventListener('input', function() {
            clearTimeout(debounceTimer);
            const query = this.value.trim();
    
            debounceTimer = setTimeout(() => {
                if (query) {
                    fetch(`/employeeSearch`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ search: query })
                    })
                    .then(response => response.json())
                    .then(data => {
                        updateEmployeeTable(data);
                    })
                    .catch(err => {
                        console.error('Search request failed', err);
                    });
                } else {
                    fetch('/employelistSearch') 
                    .then(response => response.json())
                    .then(data => {
                        updateEmployeeTable(data);
                    });
                }
            }, 300); // Adjust the delay as needed
        });
    
        function updateEmployeeTable(employees) {
            const tbody = document.querySelector('tbody');
            tbody.innerHTML = ''; // Clear existing rows
    
            employees.forEach(employee => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${employee.uniqueID}</td>
                    <td><img src="/${employee.imgUpload.replace('\\', '/')}" alt="Employee Image" width="50" height="50"></td>
                    <td>${employee.name}</td>
                    <td>${employee.email}</td>
                    <td>${employee.mobile}</td>
                    <td>${employee.designation}</td>
                    <td>${employee.gender}</td>
                    <td>${employee.course}</td>
                    <td>${new Date(employee.createdAt).toLocaleDateString()}</td>
                    <td><a href="/editEmployee/${employee._id}" class="btn btn-warning">Edit</a></td>
                    <td><button class="btn btn-danger" onclick="deleteEmployee('${employee._id}')">Delete</button></td>
                    <td>
                        <button class="btn btn-primary" onclick="updateStatus('${employee._id}')">
                            ${employee.status ? 'Active' : 'Inactive'}
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function sortTable(column) {
            // Toggle sort order for the clicked column
            sortOrder[column] = !sortOrder[column]; // Toggle between true/false
            
            // Set the sort icon based on the order
            const iconId = `sortIcon${column.charAt(0).toUpperCase() + column.slice(1)}`;
            const sortIcon = document.getElementById(iconId);
            sortIcon.innerHTML = sortOrder[column] ? 'ðŸ”¼' : 'ðŸ”½'; // Up arrow for true, down arrow for false
            
            fetch(`/sortEmployees?column=${column}&order=${sortOrder[column] ? 'asc' : 'desc'}`)
                .then(response => response.json())
                .then(data => {
                    updateEmployeeTable(data);
                })
                .catch(err => {
                    console.error('Sort request failed', err);
                });
        }

        function deleteEmployee(empId) {
          Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(`/deleteEmployee/${empId}`, {
                method: 'DELETE',
                headers: {
                  'Content-Type': 'application/json'
                }
              })
              .then(response => {
                if (response.ok) {
                  Swal.fire(
                    'Deleted!',
                    'Employee deleted successfully.',
                    'success'
                  ).then(() => {
                    location.reload(); // Reload the page
                  });
                } else {
                  Swal.fire(
                    'Error!',
                    'Failed to delete employee.',
                    'error'
                  );
                }
              })
              .catch(err => {
                console.error('Delete request failed', err);
              });
            }
          });
        }

        function updateStatus(empId) {
          fetch(`/updateStatus/${empId}`, {
            method: 'PATCH'
          })
          .then(response => {
            if (response.ok) {
              location.reload(); 
            } else {
              console.error('Error updating status');
            }
          })
          .catch(err => {
            console.error('Update request failed', err);
          });
        }
    </script>
</body>
</html>
